Description: Generic EC2 Instance Used For Testing On The Public Subnet

Parameters:
  LatestAmiId:
    Description: AMI for EC2 (default is latest Amazon Linux 2)
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  CIDRIpForSSH:
    Description: CIDR IP for SSH access (default is VPC-only access)
    Type: String
    Default: 10.17.0.0/16
    AllowedPattern: ^(([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2})|10\.16\.0\.0/16$
    ConstraintDescription: Must be a valid CIDR block.
  CIDRIpForHTTP:
    Description: CIDR IP for HTTP access (default is VPC-only access)
    Type: String
    Default: 10.17.0.0/16
    AllowedPattern: ^(([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2})|10\.16\.0\.0/16$
    ConstraintDescription: Must be a valid CIDR block.
  Environment:
    Description: Environment to determine which subnet the instance will be placed in
    Type: String
    AllowedValues:
      - test
      - prod
    Default: test
  InstanceSuffix:
    Description: A unique suffix to avoid name conflicts (e.g., `01`, `team-a`, etc.)
    Type: String
    Default: "01"

Mappings:
  SubnetMapping:
    test:
      SubnetId: VPCMultiphase-TestingPublicSubnetIdScoops
    prod:
      SubnetId: VPCMultiphase-ProductionPublicSubnetIdScoops

Resources:
  EC2TestInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      SubnetId: !ImportValue
        Fn::FindInMap:
          - SubnetMapping
          - !Ref Environment
          - SubnetId
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: !Ref SSMInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub "EC2-${Environment}-PublicSubnetInstance-${InstanceSuffix}Scoops"
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue VPCMultiphase-VPCIdScoops
      GroupDescription: Enable SSM communication within the public network
      SecurityGroupIngress:
        - Description: Allow SSH IPv4 within the VPC
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CIDRIpForSSH
        - Description: Allow HTTP IPv4 within the VPC
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CIDRIpForHTTP
        - Description: Allow SSM Agent to communicate with SSM service
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "EC2-${Environment}-PublicSubnetInstanceSecurityGroup-${InstanceSuffix}Scoops"
  SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonS3FullAccess 
  SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SSMRole
Outputs:
  EC2InstanceId:
    Description: Instance ID of the created EC2 instance
    Value: !Ref EC2TestInstance
  EC2InstancePublicDNS:
    Description: Public DNS name of the EC2 instance
    Value: !GetAtt EC2TestInstance.PublicDnsName
  EC2InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2TestInstance.PublicIp
  EC2InstancePrivateIP:
    Description: Private IP address of the EC2 instance
    Value: !GetAtt EC2TestInstance.PrivateIp
  SSMConnectionCommand:
    Description: SSM command to connect via SSM Agent
    Value: !Sub "aws ssm start-session --target ${EC2TestInstance}"